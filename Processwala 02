processwala/
├─ netlify/functions/createOrder.js        # serverless function (Node) for Razorpay order
├─ src/
│  ├─ components/ProcessWala.jsx           # main React + Tailwind component (Razorpay checkout)
│  ├─ index.css                             # Tailwind import (you probably already have)
│  └─ App.js                                # imports ProcessWala
├─ package.json
└─ README.md
// src/components/ProcessWala.jsx
import React, { useState } from "react";
import { motion } from "framer-motion";

/*
  ProcessWala - main UI component with Razorpay checkout
  Edit text like duration, mode, fee, email directly below in `meta` object.
*/

const meta = {
  courseName: "Process Engineering Masterclass",
  feeINR: 7000, // amount shown to user
  duration: "6 weeks (self-paced available)",
  mode: "Online",
  instructor: "Suhas Ovhal",
  contactEmail: "info@processwala.com"
};

export default function ProcessWala() {
  const [loading, setLoading] = useState(false);

  // Create order on server and open Razorpay checkout
  async function handleEnroll() {
    try {
      setLoading(true);
      // 1) call serverless function to create order
      const res = await fetch("/.netlify/functions/createOrder", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          amount: meta.feeINR, // server expects INR amount integer
          currency: "INR",
          receipt: "receipt_" + Date.now(),
          course: meta.courseName,
          customer_email: meta.contactEmail
        })
      });

      const data = await res.json();

      if (!res.ok) throw new Error(data.message || "Failed to create order");

      const { key, order } = data; // key = RAZORPAY_KEY_ID (public), order = razorpay order object

      // 2) configure Razorpay checkout
      const options = {
        key: key, // razorpay key id (public)
        amount: order.amount, // in paise
        currency: order.currency,
        name: "ProcessWala",
        description: meta.courseName,
        image: "", // optional logo url
        order_id: order.id,
        handler: function (response) {
          // response contains razorpay_payment_id, razorpay_order_id, razorpay_signature
          alert("Payment successful! Payment ID: " + response.razorpay_payment_id);
          // TODO: send this response to your backend to validate signature & save record.
        },
        prefill: {
          email: meta.contactEmail,
          name: meta.instructor
        },
        theme: {
          color: "#059669"
        }
      };

      // 3) load Razorpay script (if not already loaded), then open
      if (!window.Razorpay) {
        await new Promise((resolve, reject) => {
          const script = document.createElement("script");
          script.src = "https://checkout.razorpay.com/v1/checkout.js";
          script.onload = resolve;
          script.onerror = reject;
          document.body.appendChild(script);
        });
      }

      const rzp = new window.Razorpay(options);
      rzp.open();
    } catch (err) {
      console.error(err);
      alert("Error initiating payment: " + (err.message || err));
    } finally {
      setLoading(false);
    }
  }

  return (
    <div className="min-h-screen bg-slate-50 text-slate-800">
      {/* NAV */}
      <header className="bg-white shadow-sm">
        <div className="max-w-6xl mx-auto px-6 py-4 flex items-center justify-between">
          <a href="#" className="flex items-center gap-3">
            <div className="w-10 h-10 rounded-md bg-gradient-to-br from-emerald-500 to-teal-500 flex items-center justify-center text-white font-bold">PW</div>
            <div>
              <div className="font-semibold text-lg">ProcessWala</div>
              <div className="text-xs text-slate-500">{meta.courseName}</div>
            </div>
          </a>
          <nav className="hidden md:flex gap-6 items-center text-sm">
            <a href="#courses" className="hover:underline">Courses</a>
            <a href="#services" className="hover:underline">Services</a>
            <a href="#instructor" className="hover:underline">Instructor</a>
            <a href="#contact" className="text-emerald-600 font-semibold">Contact</a>
            <button onClick={handleEnroll} className="ml-2 px-4 py-2 bg-emerald-600 text-white rounded-md shadow-sm">Enroll Now</button>
          </nav>
        </div>
      </header>

      {/* HERO */}
      <main className="max-w-6xl mx-auto px-6 py-12">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
          <motion.section initial={{ opacity: 0, x: -20 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.5 }}>
            <h1 className="text-4xl md:text-5xl font-extrabold leading-tight">{meta.courseName}</h1>
            <p className="mt-4 text-slate-600">Practical, industry-focused course for chemical / process engineers — learn fundamentals, design skills, and simulation using Aspen HYSYS.</p>

            <div className="mt-6 flex items-center gap-4">
              <div className="rounded-lg bg-white border p-4">
                <div className="text-sm text-slate-500">Course fee</div>
                <div className="text-2xl font-bold">₹{meta.feeINR.toLocaleString()}</div>
                <div className="text-xs text-slate-400">One-time payment</div>
              </div>

              <div className="flex gap-3">
                <button id="enroll" onClick={handleEnroll} disabled={loading} className="inline-block px-5 py-3 bg-emerald-600 text-white rounded-md shadow hover:brightness-105">
                  {loading ? "Preparing..." : "Enroll Now"}
                </button>
                <a href="#courses" className="inline-block px-5 py-3 border rounded-md">View Syllabus</a>
              </div>
            </div>

            <div className="mt-6 text-sm text-slate-500">Mode: {meta.mode}. Duration: {meta.duration}.</div>
          </motion.section>

          <motion.section initial={{ opacity: 0, x: 20 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.5 }} className="relative">
            <div className="rounded-2xl overflow-hidden shadow-lg bg-gradient-to-br from-white to-slate-50 border">
              <img src="https://images.unsplash.com/photo-1581091215367-6f6d7f49d7b0?q=80&w=1200&auto=format&fit=crop&ixlib=rb-4.0.3&s=placeholder" alt="process engineering" className="w-full h-64 object-cover" />
              <div className="p-6">
                <div className="text-sm text-slate-500">What you'll get</div>
                <ul className="mt-3 space-y-2 text-sm">
                  <li>✔ Industry-relevant modules (Design, Equipment, Safety)</li>
                  <li>✔ Hands-on Aspen HYSYS sessions</li>
                  <li>✔ Templates: P&ID snippets, equipment sizing sheets</li>
                  <li>✔ Certificate on completion</li>
                </ul>
              </div>
            </div>
          </motion.section>
        </div>

        {/* COURSES / SYLLABUS */}
        <section id="courses" className="mt-14">
          <h2 className="text-2xl font-semibold">Syllabus</h2>
          <p className="mt-2 text-slate-600">A concise syllabus focused on practical skills. Edit anytime.</p>

          <div className="mt-6 grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="bg-white p-6 rounded-lg shadow-sm border">
              <h3 className="font-semibold">Basic Engineering</h3>
              <p className="mt-2 text-sm text-slate-500">Fundamentals: mass & energy balances, unit operations, material properties, basic equipment.</p>
              <ul className="mt-4 text-sm space-y-1 text-slate-600">
                <li>- Unit conversions & properties</li>
                <li>- Heat transfer basics</li>
                <li>- Fluid flow & piping fundamentals</li>
              </ul>
            </div>

            <div className="bg-white p-6 rounded-lg shadow-sm border">
              <h3 className="font-semibold">Design Engineering</h3>
              <p className="mt-2 text-sm text-slate-500">Applied design: equipment sizing, P&ID understanding, material selection, pump & compressor selection.</p>
              <ul className="mt-4 text-sm space-y-1 text-slate-600">
                <li>- Equipment sizing examples</li>
                <li>- P&ID reading & creation</li>
                <li>- Safety and relief sizing basics</li>
              </ul>
            </div>

            <div className="bg-white p-6 rounded-lg shadow-sm border">
              <h3 className="font-semibold">Simulation & Practicals</h3>
              <p className="mt-2 text-sm text-slate-500">Practice sessions using process simulators and case studies.</p>
              <ul className="mt-4 text-sm space-y-1 text-slate-600">
                <li>- Aspen HYSYS workflow</li>
                <li>- Simulation case studies</li>
                <li>- Model validation & reporting</li>
              </ul>
            </div>
          </div>
        </section>

        {/* SERVICES */}
        <section id="services" className="mt-14">
          <h2 className="text-2xl font-semibold">Services</h2>
          <p className="mt-2 text-slate-600">Beyond the course, we provide professional services to support your projects.</p>

          <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="bg-white p-6 rounded-lg shadow-sm border">
              <h3 className="font-semibold">Engineering Design Services</h3>
              <p className="mt-2 text-sm text-slate-500">Feasibility, process design, P&ID development, vendor datasheets, and technical review.</p>
            </div>

            <div className="bg-white p-6 rounded-lg shadow-sm border">
              <h3 className="font-semibold">Aspen HYSYS Simulation Support</h3>
              <p className="mt-2 text-sm text-slate-500">Model building, simulation troubleshooting, result interpretation, and reporting.</p>
            </div>
          </div>
        </section>

        {/* INSTRUCTOR */}
        <section id="instructor" className="mt-14 bg-white p-6 rounded-lg shadow-sm border">
          <div className="flex flex-col md:flex-row items-center gap-6">
            <img src="https://images.unsplash.com/photo-1544005313-94ddf0286df2?q=80&w=800&auto=format&fit=crop&ixlib=rb-4.0.3&s=placeholder" alt="Instructor" className="w-28 h-28 rounded-full object-cover" />

            <div>
              <h3 className="text-xl font-semibold">{meta.instructor}</h3>
              <p className="mt-1 text-sm text-slate-500">Consulting Chemical Engineer with 35+ years of industry & design experience. Practical approach to process design, simulation and operations.</p>

              <div className="mt-3 flex gap-3 items-center">
                <a href="#contact" className="px-3 py-2 bg-emerald-600 text-white rounded-md">Contact Instructor</a>
                <a href="#services" className="px-3 py-2 border rounded-md">View Services</a>
              </div>
            </div>
          </div>
        </section>

        {/* PRICING / CTA */}
        <section className="mt-14 grid grid-cols-1 md:grid-cols-2 gap-6 items-start">
          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <h3 className="text-xl font-semibold">Join the Masterclass</h3>
            <p className="mt-2 text-slate-600">Clear, practical, and immediately useful. Limited seats per cohort to keep sessions interactive.</p>

            <div className="mt-4 flex items-center gap-6">
              <div>
                <div className="text-sm text-slate-500">Course Fee</div>
                <div className="text-3xl font-bold">₹{meta.feeINR.toLocaleString()}</div>
              </div>

              <div className="ml-auto flex gap-3">
                <button onClick={handleEnroll} className="px-5 py-3 bg-emerald-600 text-white rounded-md shadow">Enroll Now</button>
                <a href="#" className="px-5 py-3 border rounded-md">Pay Later</a>
              </div>
            </div>

            <ul className="mt-4 text-sm text-slate-600 space-y-1">
              <li>• Certificate on completion</li>
              <li>• Downloadable templates & cheat-sheets</li>
              <li>• Lifetime access to recorded sessions (if any)</li>
            </ul>
          </div>

          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <h3 className="text-xl font-semibold">Have a question?</h3>
            <p className="mt-2 text-slate-600">Drop a message and we will reply within 24–48 hours.</p>

            <form id="contact" className="mt-4 grid grid-cols-1 gap-3" onSubmit={(e)=>{e.preventDefault(); alert('Thanks! We will contact you (placeholder).')}}>
              <input className="border p-3 rounded-md" type="text" name="name" placeholder="Your name" />
              <input className="border p-3 rounded-md" type="email" name="email" placeholder="Email" />
              <textarea className="border p-3 rounded-md" name="message" rows="4" placeholder="Message (e.g. I want to enroll)"></textarea>
              <div className="flex gap-3">
                <button type="submit" className="px-4 py-2 bg-emerald-600 text-white rounded-md">Send Message</button>
                <button type="button" onClick={()=> window.location.href = `mailto:${meta.contactEmail}?subject=Enrollment%20Inquiry`} className="px-4 py-2 border rounded-md">Email</button>
              </div>
            </form>
          </div>
        </section>

        {/* FOOTER */}
        <footer className="mt-14 text-sm text-slate-500">
          <div className="border-t pt-6 flex flex-col md:flex-row items-center justify-between gap-4">
            <div>© {new Date().getFullYear()} ProcessWala — {meta.courseName}</div>
            <div className="flex gap-4 items-center">
              <a href="#" className="hover:underline">Privacy</a>
              <a href="#" className="hover:underline">Terms</a>
              <a href={`mailto:${meta.contactEmail}`} className="hover:underline">{meta.contactEmail}</a>
            </div>
          </div>
        </footer>
      </main>
    </div>
  );
}// netlify/functions/createOrder.js
const Razorpay = require("razorpay");

exports.handler = async function (event, context) {
  // Only POST allowed
  if (event.httpMethod !== "POST") {
    return { statusCode: 405, body: JSON.stringify({ message: "Method Not Allowed" }) };
  }

  try {
    const body = JSON.parse(event.body || "{}");
    const amountINR = Number(body.amount) || 7000; // rupees
    const amountPaise = Math.round(amountINR * 100); // razorpay wants paise

    // create razorpay instance using env vars
    const key_id = process.env.RAZORPAY_KEY_ID;
    const key_secret = process.env.RAZORPAY_KEY_SECRET;

    if (!key_id || !key_secret) {
      return { statusCode: 500, body: JSON.stringify({ message: "Razorpay keys not set" }) };
    }

    const razorpay = new Razorpay({
      key_id,
      key_secret
    });

    const options = {
      amount: amountPaise,
      currency: "INR",
      receipt: body.receipt || `receipt_${Date.now()}`,
      payment_capture: 1 // auto-capture
    };

    const order = await razorpay.orders.create(options);

    return {
      statusCode: 200,
      body: JSON.stringify({
        key: key_id,  // public key for checkout
        order
      })
    };
  } catch (err) {
    console.error("createOrder error:", err);
    return { statusCode: 500, body: JSON.stringify({ message: err.message || "Server error" }) };
  }
};// package.json (partial)
{
  "name": "processwala-site",
  "version": "1.0.0",
  "dependencies": {
    "razorpay": "^2.8.0",
    "framer-motion": "^10.12.0"
  }
}# if you haven't already
npx create-react-app processwala
cd processwala
npm install framer-motion razorpay
# add the files above into appropriate folders
npm start   # to test locally (serverless function won't run locally unless you set up netlify dev)
